services:
  postgres:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_DB: afrobuy_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  django:
    build: .
    container_name: django_app
    command: sh -c "python manage.py migrate && gunicorn main.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
    healthcheck:
      test: ["CMD", "python", "manage.py", "check", "--database", "default"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7
    container_name: redis_server
    ports:
      - "6379:6379"

  celery_worker:
    build: .
    container_name: celery_worker
    command: celery -A main worker -l info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      django:
        condition: service_healthy
      redis:
        condition: service_started
      postgres:
        condition: service_started

  celery_beat:
    build: .
    container_name: celery_beat
    command: celery -A main beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      django:
        condition: service_healthy
      redis:
        condition: service_started
      postgres:
        condition: service_started

volumes:
  postgres_data: