# Generated by Django 5.2.5 on 2025-08-13 20:29

import accounts.models
import django.contrib.auth.validators
import django.utils.timezone
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('vendor', 'Vendor'), ('buyer', 'Buyer')], db_index=True, max_length=20)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profiles/')),
                ('phone', models.CharField(blank=True, db_index=True, max_length=20, null=True)),
                ('location', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('business_name', models.CharField(blank=True, max_length=255, null=True)),
                ('wallet', models.DecimalField(db_index=True, decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('referral_points', models.IntegerField(db_index=True, default=0)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended'), ('pending', 'Pending')], db_index=True, default='active', max_length=20)),
                ('email_verified', models.BooleanField(default=False)),
                ('phone_verified', models.BooleanField(default=False)),
                ('login_attempts', models.IntegerField(default=0)),
                ('account_locked_until', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'indexes': [models.Index(fields=['role'], name='accounts_us_role_1fa9a5_idx'), models.Index(fields=['username'], name='accounts_us_usernam_c0ea66_idx'), models.Index(fields=['email'], name='accounts_us_email_74c8d6_idx'), models.Index(fields=['phone'], name='accounts_us_phone_f54457_idx'), models.Index(fields=['status'], name='accounts_us_status_6bbe13_idx'), models.Index(fields=['wallet'], name='accounts_us_wallet_76df32_idx'), models.Index(fields=['role', 'status'], name='accounts_us_role_9fc6ca_idx'), models.Index(fields=['email_verified', 'phone_verified'], name='accounts_us_email_v_262863_idx')],
            },
            managers=[
                ('objects', accounts.models.UserManager()),
            ],
        ),
    ]
