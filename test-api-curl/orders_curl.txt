# ORDERS API ENDPOINTS - CURL COMMANDS
# Base URL: http://localhost:8000/api/orders
# Authentication: JWT tokens required for all endpoints

# ===============================
# ORDER CREATION ENDPOINTS
# ===============================

# 1. Create Individual Order
curl -X POST http://localhost:8000/api/orders/create/ \
  -H "Authorization: Bearer BUYER_ACCESS_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "buyer_id": 1,
    "vendor_id": 2,
    "payment_method": "mobile_money",
    "delivery_address": "123 Main Street, New York, NY 10001",
    "subtotal": "99.99",
    "delivery_fee": "5.00",
    "total_amount": "104.99",
    "item": {
      "product_id": 1,
      "quantity": 2,
      "unit_price": "49.99"
    },
    "is_group_order": false
  }'

# 2. Create Group Order
curl -X POST http://localhost:8000/api/orders/create/ \
  -H "Authorization: Bearer BUYER_ACCESS_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "buyer_id": 1,
    "vendor_id": 2,
    "payment_method": "cash_on_delivery",
    "delivery_address": "456 Oak Avenue, Boston, MA 02101",
    "subtotal": "150.00",
    "delivery_fee": "3.00",
    "total_amount": "153.00",
    "item": {
      "product_id": 3,
      "quantity": 10,
      "unit_price": "15.00"
    },
    "is_group_order": true
  }'

# 3. Create Order with Bank Transfer Payment
curl -X POST http://localhost:8000/api/orders/create/ \
  -H "Authorization: Bearer BUYER_ACCESS_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "buyer_id": 1,
    "vendor_id": 3,
    "payment_method": "bank_transfer",
    "delivery_address": "789 Pine Street, Chicago, IL 60601",
    "subtotal": "299.99",
    "delivery_fee": "10.00",
    "total_amount": "309.99",
    "item": {
      "product_id": 5,
      "quantity": 1,
      "unit_price": "299.99"
    },
    "is_group_order": false
  }'

# 4. Create Bulk/Multiple Items Order
curl -X POST http://localhost:8000/api/orders/create/ \
  -H "Authorization: Bearer BUYER_ACCESS_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "buyer_id": 1,
    "vendor_id": 2,
    "payment_method": "mobile_money",
    "delivery_address": "321 Elm Street, Los Angeles, CA 90001",
    "subtotal": "75.97",
    "delivery_fee": "7.50",
    "total_amount": "83.47",
    "items": [
      {
        "product_id": 1,
        "quantity": 1,
        "unit_price": "49.99"
      },
      {
        "product_id": 2,
        "quantity": 2,
        "unit_price": "12.99"
      }
    ],
    "is_group_order": false
  }'

# ===============================
# ORDER LISTING ENDPOINTS
# ===============================

# 5. Get All Orders for Current User (Buyer)
curl -X GET http://localhost:8000/api/orders/list/ \
  -H "Authorization: Bearer BUYER_ACCESS_TOKEN"

# 6. Get Orders with Pagination
curl -X GET "http://localhost:8000/api/orders/list/?limit=10&offset=0" \
  -H "Authorization: Bearer BUYER_ACCESS_TOKEN"

# 7. Filter Orders by Status
curl -X GET "http://localhost:8000/api/orders/list/?status=pending" \
  -H "Authorization: Bearer BUYER_ACCESS_TOKEN"

# 8. Filter Orders by Multiple Statuses
curl -X GET "http://localhost:8000/api/orders/list/?status__in=pending,processing" \
  -H "Authorization: Bearer BUYER_ACCESS_TOKEN"

# 9. Get Orders for Specific Vendor (Vendor View)
curl -X GET "http://localhost:8000/api/orders/list/?vendor_id=2" \
  -H "Authorization: Bearer VENDOR_ACCESS_TOKEN"

# 10. Get Orders by Date Range
curl -X GET "http://localhost:8000/api/orders/list/?created_at__gte=2025-01-01&created_at__lte=2025-01-31" \
  -H "Authorization: Bearer BUYER_ACCESS_TOKEN"

# 11. Sort Orders by Date (Newest First)
curl -X GET "http://localhost:8000/api/orders/list/?ordering=-created_at" \
  -H "Authorization: Bearer BUYER_ACCESS_TOKEN"

# 12. Sort Orders by Total Amount (Highest First)
curl -X GET "http://localhost:8000/api/orders/list/?ordering=-total_amount" \
  -H "Authorization: Bearer BUYER_ACCESS_TOKEN"

# 13. Get Group Orders Only
curl -X GET "http://localhost:8000/api/orders/list/?group_id__isnull=false" \
  -H "Authorization: Bearer BUYER_ACCESS_TOKEN"

# 14. Get Individual Orders Only
curl -X GET "http://localhost:8000/api/orders/list/?group_id__isnull=true" \
  -H "Authorization: Bearer BUYER_ACCESS_TOKEN"

# ===============================
# ORDER STATUS UPDATE ENDPOINTS
# ===============================

# 15. Update Order Status to Processing (Vendor/Admin)
curl -X PUT http://localhost:8000/api/orders/status/ \
  -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU2MjA5ODkzLCJpYXQiOjE3NTYyMDYyOTMsImp0aSI6ImUxMWE5YzgwMGUzMjQwZDU5YzVlZjA2YjIzZGUyMTQ4IiwidXNlcl9pZCI6IjgifQ.NkYCs5jYwvquvbMhuAj8--FyupScGfTOrnhRU3PktvY" \
  -H "Content-Type: application/json" \
  -d '{
    "order_id": 1,
    "new_status": "processing"
  }'

# 16. Update Order Status to Shipped (Vendor/Admin)
curl -X PUT http://localhost:8000/api/orders/status/ \
  -H "Authorization: Bearer VENDOR_ACCESS_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "order_id": 1,
    "new_status": "shipped"
  }'

# 17. Update Order Status to Delivered (Vendor/Admin)
curl -X PUT http://localhost:8000/api/orders/status/ \
  -H "Authorization: Bearer VENDOR_ACCESS_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "order_id": 1,
    "new_status": "delivered"
  }'

# 18. Cancel Order (Buyer/Vendor/Admin)
curl -X PUT http://localhost:8000/api/orders/status/ \
  -H "Authorization: Bearer BUYER_ACCESS_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "order_id": 1,
    "new_status": "cancelled"
  }'

# 19. Bulk Status Update (Admin Only)
curl -X PUT http://localhost:8000/api/orders/status/bulk/ \
  -H "Authorization: Bearer ADMIN_ACCESS_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "order_ids": [1, 2, 3],
    "new_status": "processing"
  }'

# ===============================
# ORDER RETURN ENDPOINTS
# ===============================

# 20. Create Order Return Request
curl -X POST http://localhost:8000/api/orders/return/ \
  -H "Authorization: Bearer BUYER_ACCESS_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "order_id": 1,
    "return_reason": "Product arrived damaged. The packaging was torn and the item has visible scratches."
  }'

# 21. Create Return Request with Detailed Reason
curl -X POST http://localhost:8000/api/orders/return/ \
  -H "Authorization: Bearer BUYER_ACCESS_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "order_id": 2,
    "return_reason": "Item does not match description. Ordered red color but received blue. Size is also incorrect - ordered Large but received Medium."
  }'

# 22. Get Return Requests for User
curl -X GET http://localhost:8000/api/orders/returns/ \
  -H "Authorization: Bearer BUYER_ACCESS_TOKEN"

# 23. Get Return Request Details
curl -X GET http://localhost:8000/api/orders/returns/1/ \
  -H "Authorization: Bearer BUYER_ACCESS_TOKEN"

# 24. Update Return Status (Vendor/Admin Only)
curl -X PUT http://localhost:8000/api/orders/returns/1/status/ \
  -H "Authorization: Bearer VENDOR_ACCESS_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "return_status": "approved"
  }'

# 25. Reject Return Request (Vendor/Admin Only)
curl -X PUT http://localhost:8000/api/orders/returns/1/status/ \
  -H "Authorization: Bearer VENDOR_ACCESS_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "return_status": "rejected"
  }'

# ===============================
# ORDER DETAILS & ANALYTICS
# ===============================

# 26. Get Specific Order Details
curl -X GET http://localhost:8000/api/orders/1/ \
  -H "Authorization: Bearer BUYER_ACCESS_TOKEN"

# 27. Get Order with Items Details
curl -X GET http://localhost:8000/api/orders/1/details/ \
  -H "Authorization: Bearer BUYER_ACCESS_TOKEN"

# 28. Get Order Statistics (Admin Only)
curl -X GET http://localhost:8000/api/orders/stats/ \
  -H "Authorization: Bearer ADMIN_ACCESS_TOKEN"

# 29. Get Vendor Order Statistics (Vendor Only)
curl -X GET http://localhost:8000/api/orders/stats/vendor/ \
  -H "Authorization: Bearer VENDOR_ACCESS_TOKEN"

# 30. Get Orders Analytics by Date Range (Admin Only)
curl -X GET "http://localhost:8000/api/orders/analytics/?start_date=2025-01-01&end_date=2025-01-31" \
  -H "Authorization: Bearer ADMIN_ACCESS_TOKEN"

# ===============================
# GROUP ORDER MANAGEMENT
# ===============================

# 31. Get Group Orders List
curl -X GET http://localhost:8000/api/orders/groups/ \
  -H "Authorization: Bearer YOUR_ACCESS_TOKEN"

# 32. Get Specific Group Order Details
curl -X GET http://localhost:8000/api/orders/groups/GROUP_ID_123/ \
  -H "Authorization: Bearer YOUR_ACCESS_TOKEN"

# 33. Join Existing Group Order
curl -X POST http://localhost:8000/api/orders/groups/GROUP_ID_123/join/ \
  -H "Authorization: Bearer BUYER_ACCESS_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "quantity": 5,
    "delivery_address": "123 Main St, City, State 12345"
  }'

# 34. Leave Group Order (Before Deadline)
curl -X DELETE http://localhost:8000/api/orders/groups/GROUP_ID_123/leave/ \
  -H "Authorization: Bearer BUYER_ACCESS_TOKEN"

# 35. Close Group Order (Admin/Vendor Only)
curl -X PUT http://localhost:8000/api/orders/groups/GROUP_ID_123/close/ \
  -H "Authorization: Bearer VENDOR_ACCESS_TOKEN"

# ===============================
# PAYMENT & BILLING
# ===============================

# 36. Get Order Payment Details
curl -X GET http://localhost:8000/api/orders/1/payment/ \
  -H "Authorization: Bearer BUYER_ACCESS_TOKEN"

# 37. Process Payment for Order
curl -X POST http://localhost:8000/api/orders/1/payment/process/ \
  -H "Authorization: Bearer BUYER_ACCESS_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "payment_method": "mobile_money",
    "payment_reference": "PAY123456789",
    "amount": "104.99"
  }'

# 38. Confirm Payment Received (Vendor/Admin Only)
curl -X PUT http://localhost:8000/api/orders/1/payment/confirm/ \
  -H "Authorization: Bearer VENDOR_ACCESS_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "payment_confirmed": true,
    "confirmation_notes": "Payment received via mobile money"
  }'

# 39. Generate Invoice
curl -X GET http://localhost:8000/api/orders/1/invoice/ \
  -H "Authorization: Bearer BUYER_ACCESS_TOKEN"

# 40. Download Invoice PDF
curl -X GET http://localhost:8000/api/orders/1/invoice/pdf/ \
  -H "Authorization: Bearer BUYER_ACCESS_TOKEN" \
  -H "Accept: application/pdf" \
  -o "invoice_order_1.pdf"

# ===============================
# ORDER TRACKING
# ===============================

# 41. Get Order Tracking Information
curl -X GET http://localhost:8000/api/orders/1/tracking/ \
  -H "Authorization: Bearer BUYER_ACCESS_TOKEN"

# 42. Update Order Tracking (Vendor/Admin Only)
curl -X PUT http://localhost:8000/api/orders/1/tracking/ \
  -H "Authorization: Bearer VENDOR_ACCESS_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "tracking_number": "TRACK123456789",
    "carrier": "FedEx",
    "estimated_delivery": "2025-08-25T17:00:00Z",
    "tracking_url": "https://fedex.com/track/TRACK123456789"
  }'

# ===============================
# ADVANCED FILTERING & SEARCH
# ===============================

# 43. Search Orders by Delivery Address
curl -X GET "http://localhost:8000/api/orders/list/?search=Main Street" \
  -H "Authorization: Bearer BUYER_ACCESS_TOKEN"

# 44. Filter by Payment Method
curl -X GET "http://localhost:8000/api/orders/list/?payment_method=mobile_money" \
  -H "Authorization: Bearer BUYER_ACCESS_TOKEN"

# 45. Filter by Amount Range
curl -X GET "http://localhost:8000/api/orders/list/?total_amount__gte=50&total_amount__lte=200" \
  -H "Authorization: Bearer BUYER_ACCESS_TOKEN"

# 46. Get Orders Eligible for Return
curl -X GET "http://localhost:8000/api/orders/list/?return_eligible_until__gt=$(date -Iseconds)" \
  -H "Authorization: Bearer BUYER_ACCESS_TOKEN"

# 47. Complex Filter - Recent, High-Value, Delivered Orders
curl -X GET "http://localhost:8000/api/orders/list/?status=delivered&total_amount__gte=100&created_at__gte=$(date -d '30 days ago' -Iseconds)" \
  -H "Authorization: Bearer BUYER_ACCESS_TOKEN"

# ===============================
# ORDER NOTIFICATIONS
# ===============================

# 48. Send Order Confirmation (Admin/System)
curl -X POST http://localhost:8000/api/orders/1/notify/confirmation/ \
  -H "Authorization: Bearer ADMIN_ACCESS_TOKEN"

# 49. Send Shipping Notification (Admin/System)
curl -X POST http://localhost:8000/api/orders/1/notify/shipped/ \
  -H "Authorization: Bearer ADMIN_ACCESS_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "tracking_number": "TRACK123456789",
    "estimated_delivery": "2025-08-25"
  }'

# 50. Send Delivery Confirmation (Admin/System)
curl -X POST http://localhost:8000/api/orders/1/notify/delivered/ \
  -H "Authorization: Bearer ADMIN_ACCESS_TOKEN"

# ===============================
# ERROR HANDLING EXAMPLES
# ===============================

# Common HTTP Status Codes:
# - 200: Success
# - 201: Order created successfully
# - 400: Bad request (validation errors, insufficient data)
# - 401: Unauthorized (invalid/missing token)
# - 403: Forbidden (insufficient permissions)
# - 404: Order not found
# - 409: Conflict (order already processed, group order closed)
# - 422: Unprocessable Entity (business rule violations)
# - 429: Too many requests (rate limited)

# Example validation error response:
# {
#   "error": "Validation failed",
#   "details": {
#     "total_amount": ["Total amount must match subtotal + delivery fee."],
#     "payment_method": ["Invalid payment method selected."],
#     "item.quantity": ["Quantity must be greater than 0."]
#   }
# }

# Example business logic error:
# {
#   "error": "Business rule violation",
#   "message": "Cannot cancel order that has already been shipped",
#   "code": "ORDER_ALREADY_SHIPPED"
# }

# ===============================
# PAYMENT METHODS REFERENCE
# ===============================

# Available Payment Methods:
# - mobile_money: Mobile money payments (M-Pesa, MTN Mobile Money, etc.)
# - cash_on_delivery: Pay when the order is delivered
# - bank_transfer: Direct bank transfer payments

# ===============================
# ORDER STATUS FLOW
# ===============================

# Status Progression:
# pending -> processing -> shipped -> delivered
#    |
#    v
# cancelled (can be cancelled from pending or processing)

# Return Status Flow:
# pending -> approved -> completed
#    |
#    v
# rejected

# ===============================
# NOTES & BEST PRACTICES
# ===============================

# 1. Permissions:
#    - Buyers can create orders and view their own orders
#    - Vendors can view and update status of orders for their products
#    - Admins can view and manage all orders

# 2. Group Orders:
#    - Must reach minimum quantity before deadline
#    - Participants can join/leave before deadline
#    - Automatically processed when criteria are met

# 3. Returns:
#    - Only available for delivered orders within return window
#    - Require detailed reason for processing
#    - Status managed by vendors/admins

# 4. Payment Processing:
#    - Orders are created with pending payment status
#    - Payment confirmation updates order status
#    - Failed payments may cancel the order automatically

# 5. Tracking:
#    - Tracking information is optional but recommended
#    - Updates trigger automatic notifications
#    - Integration with shipping carriers for real-time updates
